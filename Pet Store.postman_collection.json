{
	"info": {
		"_postman_id": "583a2c31-6de3-4f68-a15f-a5729f6d8881",
		"name": "Pet Store",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33438869"
	},
	"item": [
		{
			"name": "Pet Type",
			"item": [
				{
					"name": "Create Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 (Created)\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has created resource ID\", function () {",
									"    const responseBody = pm.response.json();",
									"    pm.expect(responseBody.data).to.have.property(\"_id\").that.is.not.null;",
									"    pm.expect(responseBody.data._id).to.have.lengthOf(24);",
									"    pm.collectionVariables.set(\"petId\", responseBody.data._id)",
									"})",
									"",
									"pm.test(\"The response has all properties\", () => {",
									"    const responseBody = pm.response.json();",
									"    const {data} = responseBody;",
									"    pm.expect(data.type).to.be.a('string')",
									"    pm.expect(data.type).to.eql('fishes')",
									"    pm.expect(data.count).to.be.a('number')",
									"    pm.expect(data.count).to.eql(10)",
									"    pm.expect(data.supplies).to.be.a('string')",
									"    pm.expect(data.supplies).to.eql('Check info for each individual that we have...')",
									"     pm.expect(data.description).to.be.a('string')",
									"    pm.expect(data.description).to.eql('Goldfish are most common')",
									"",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "     {\"pet\": {\"type\": \"fishes\",\n            \"count\": 10,\n            \"supplies\": \"Check info for each individual that we have...\",\n            \"description\": \"Goldfish are most common\"}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5001/api/pets",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"pets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ALL Pets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response should be okay to process and have data property\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\")",
									"})",
									"pm.test(\"Response has all data\", function() {",
									"     pm.response.to.have.jsonBody(\"data\")",
									" ",
									"})",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5001/api/pets",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"pets"
							]
						},
						"description": "Get All Pets"
					},
					"response": []
				},
				{
					"name": "GET By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should have all the Pet properties\", function() {",
									"      pm.collectionVariables.get(\"petId\", pm.response.json()._id);",
									"});",
									"",
									"pm.test(\"Response has all data\", function() {",
									"      pm.expect(pm.response.text()).to.include(\"_id\");",
									"});",
									"",
									"pm.test(\"Schema is valid\", function () {",
									"  var schema = {",
									"    type: \"object\",",
									"    properties: {",
									"      data: {",
									"        type: \"object\",",
									"        properties: {",
									"          _id: {",
									"            type: \"string\"",
									"          }",
									"        },",
									"        required: [\"_id\"]",
									"      }",
									"    }",
									"  };",
									"",
									"  var response = pm.response.json();",
									"  pm.expect(tv4.validate(response, schema)).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5001/api/pets/{{petId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"pets",
								"{{petId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test('Response has updated by resource ID', function () {",
									"     pm.expect(jsonData.data).to.have.property(\"_id\").that.is.not.null;",
									"    pm.collectionVariables.get('petId', jsonData._id);",
									"});",
									"",
									"",
									"pm.test('Content-Type header is present and application/json', function () {",
									"    pm.response.to.have.header('Content-Type');",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
									"});",
									"",
									"pm.test('Response status UPDATED by ID', function () {",
									"    pm.collectionVariables.set(\"Rep\")",
									"  ",
									"});",
									"  ",
									"",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"type\": \"Rep\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5001/api/pets/{{petId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"pets",
								"{{petId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Del By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test('Response has updated by resource ID', function () {",
									"    pm.collectionVariables.get('petId', data._id);",
									"   ",
									"})",
									"",
									"",
									"pm.test(\"Status code is 200 (DELETED)\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5001/api/pets/{{petId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"pets",
								"{{petId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Animals",
			"item": [
				{
					"name": "Create Animal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 (Created)\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has created resource ID\", function () {",
									"    const responseBody = pm.response.json();",
									"    pm.expect(responseBody.data).to.have.property(\"_id\").that.is.not.null;",
									"    pm.expect(responseBody.data._id).to.have.lengthOf(24);",
									"    pm.collectionVariables.set(\"animalId\", responseBody.data._id)",
									"})",
									"",
									"pm.test(\"The response has all properties\", () => {",
									"    const responseBody = pm.response.json();",
									"    const {data} = responseBody;",
									"    pm.expect(data.name).to.be.a('string')",
									"    pm.expect(data.name).to.eql('Cats')",
									"    pm.expect(data.count).to.be.a('number')",
									"    pm.expect(data.count).to.eql(10)",
									"    pm.expect(data.description).to.be.a('string')",
									"    pm.expect(data.description).to.deep.eql('Furry fur balls')",
									"",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \"animal\": {\n    \"name\": \"Cats\",\n    \"count\": 10,\n    \"price\": 24.89,\n    \"food\": \"Beetles, fruit and grass\",\n    \"description\": \"Furry fur balls\",\n    \"pet\": \"65f67518dee42bde2f6ac152\"\n}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5001/api/animals",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"animals"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ALL Animals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response should be okay to process and have data property\", function() {",
									"    pm.response.to.not.be.error;",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\")",
									"})",
									"pm.test(\"Response has all data\", function() {",
									"     pm.response.to.have.jsonBody(\"data\")",
									" ",
									"})",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5001/api/animals",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"animals"
							]
						},
						"description": "Get All Pets"
					},
					"response": []
				},
				{
					"name": "GET By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Should have all the Pet properties', function () {",
									"    pm.collectionVariables.get('animalId', pm.response.json()._id);",
									"})",
									"",
									"pm.test(\"Price is a valid decimal number\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    ",
									"    if (responseData.data) {",
									"        responseData.data.forEach(function(animal) {",
									"            pm.expect(animal.price).to.exist(/^\\d+\\.\\d+$/);",
									"        });",
									"    }",
									"});",
									"",
									"pm.test(\"Response time is less than 20ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(20);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5001/api/animals/{{animalId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"animals",
								"{{animalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test('Response has updated by resource ID', function () {",
									"     pm.expect(jsonData.data).to.have.property(\"_id\").that.is.not.null;",
									"    pm.collectionVariables.get('animalId', jsonData._id);",
									"});",
									"",
									"",
									"pm.test('Content-Type header is present and application/json', function () {",
									"    pm.response.to.have.header('Content-Type');",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
									"});",
									"",
									"pm.test('Response status UPDATED by ID', function () {",
									"    pm.collectionVariables.set(\"Lizard\")",
									"  ",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"Lizard\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5001/api/animals/{{animalId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"animals",
								"{{animalId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Del By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test('Response has updated by resource ID', function () {",
									"    pm.collectionVariables.get('animalId', data._id);",
									"})",
									"",
									"pm.test(\"Response to clear collection variable\", function () { ",
									"pm.collectionVariables.unset(data._id);",
									"});",
									"",
									"pm.test(\"Status code is 200 (DELETED)\", function () {",
									"  pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5001/api/animals/{{animalId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"animals",
								"{{animalId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "petId",
			"value": ""
		},
		{
			"key": "Rep",
			"value": ""
		},
		{
			"key": "animalId",
			"value": ""
		},
		{
			"key": "Lizard",
			"value": ""
		}
	]
}